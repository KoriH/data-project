name: Deploying Container

# needs approval by employee
on:
  workflow_call:
  workflow_dispatch:

env:
  REGISTRY: dockerhub.io
  IMAGE_NAME: ${{ github.repository }}

# change to custom runner
jobs:
  delivery:
    uses: ./.github/workflows/delivery.yml
    permissions:
      contents: read
      packages: write
      id-token: write
  
  staging:
    needs: [delivery]
    permissions:
      packages: read
    steps:
      - name: Pull new package from Github repository

      - name: Login to Docker Registry ${{ env.REGISTRY }}
        uses: docker/login-action@v2.1.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@4.4.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      
      - name: Sign and publish Docker Image
        env:
          COSIGN_EXPERIMENTAL: "true"
        run: echo "${{ steps.meta.outputs.tags }}" | xargs -I {} cosign sign {}@${{ steps.build-and-push.outputs.digest }}


  benchmarking:
    needs: [staging]
    runs-on: ubuntu-latest
    with:
      environment: production
    permissions:
      checks: write
    steps:
      - name: Run sample workload
      - run: sudo docker run ${container.name} --runtime nvidia -it --rm --network=host custom_container -v /dir/:/dir/
      - name: Copy/publish benchmarking log file w/ metadata

  # publishing to docker hub (needs approval)
  publishing:
    needs: [benchmarking]
    runs-on: ubuntu-latest
    with:
      environment: staging
    permissions:
      id-token: write
      checks: write
    steps:
    - name: Publish image to docker hub
    - run: docker push dockerhub.com/${{ secrets.GH_PROJECT_ID }}/${{ env.APPLICATION_NAME }}:latest


  # copy the new repository artifact to the jetson and replace the old one
  deploying:
    needs: [benchmarking]
    runs-on: ubuntu-latest
    with:
      environment: production
    permissions:
      packages: read
    steps:
    - name: Pull repository artifact to Jetson
    - run: git pull

        id: build-and-push
        uses: docker/build-push-action@v4.0.0
        with:
          context: .
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64
  
  # branch specific?
  # check if the image name already exists, otherwise
  # we can pull from the thing

# echo output for what you need to pull and run the docker container on another local machine
# also echo output/cat the file for log results + live prometheus link