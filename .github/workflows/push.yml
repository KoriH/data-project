name: On Push
run-name: ${{ github.actor }} is testing out GitHub Actions üöÄ
on:
  push:
    # branches-ignore:
    #   - main
    # paths:
    #   - '**.cpp'
    #   - '**.py'
  workflow_call:

jobs:
  test:
    runs-on: self-hosted
    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - run: echo "üçè This job's status is ${{ job.status }}."
  # build:
  #   runs-on: nvidia-jetson
  #   permissions:
  #     checks: write
  #   steps:
  #   - uses: actions/checkout@v4

  # lintCpp:
  #   runs-on: nvidia-jetson

  # lintPython:
  #   runs-on: nvidia-jetson

  #   - name: Install requirements
  #     run:
  #       if [ -f requirements.txt ]; then pip3 install -r requirements.txt; fi
    
  #   - name: Lint with pylint
  #     run: |
  #       pylint --disable=C0301 --disable=C0326 *.py
  #       if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    
  #   - name: Lint with flake8
  #     run: |
  #       # stop the build if there are Python syntax errors or undefined names
  #       flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
  #       # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
  #       flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  #   - name: Test with pytest
  #     run: |
  #       python3 -m pytest --verbose --junit-xml=junit.xml

  #   - name: Publish Test Report
  #     uses: mikepenz/action-junit-report@v3
  #     if: success() || failure() # always run even if the previous step fails
  #     with:
  #       report_paths: '**/junit.xml'
  #       detailed_summary: true
  #       include_passed: true

  #   -name: Run unit tests
  #     run: |
  #       python3 -m unittest --verbose --failfast   
  

  # compile:
  #   needs: [lint]
  #   runs-on: nvidia-jetson
  #   environment: development

  #   steps:
  #     - name: Checkout repository files
  #     - uses: actions/checkout@v3
  #     with:
  #       repository: # apache/tomcat
  #       ref: master
  #       path: ./tomcat

  #     - name: Copying repository files
  #     - run: cp -v 

  #     - name: Compile 

# bug checks
# compilation
# linting/formatting
# Ament_flake8 
# Ament_lint_cmake 
# Ament_xmllint 
# Black  
# Clang-tidy 
# Isort 
# code coverage
# unit tests
# runtime errors